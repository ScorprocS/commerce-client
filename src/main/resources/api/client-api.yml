openapi: 3.0.3
info:
  title: Commerce clients API
  description: Api clients
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/clients
tags:
  - name: client
    description: client api
    
paths:
  /clients:
    get:
      tags:
        - client
      summary: Get all Clients
      description: Get all Clients
      operationId: getAllClients

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'          
           
        '204':
          description: No clients

    post:
      tags:
        - client
      summary: Add a new Client
      description: Add a new Client
      operationId: addClient
      requestBody:
        description: Create a new Client 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'          
        '400':
          description: Bad request

   

  /clients/{clientId}:
    get:
      tags:
        - client
      summary: Find Client by ID
      description: Returns a single Client
      operationId: getClientById
      parameters:
        - name: clientId
          in: path
          description: ID of Client to return
          required: true
          schema:
            type: integer
            format: int64
      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'          
            
        '400':
          description: Invalid ID supplied
        '404':
          description: Client not found


    put:
      tags:
        - client
      summary: Updates a Client
      description: ''
      operationId: updateClient
      parameters:
        - name: clientId
          in: path
          description: ID of Client that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Create a new Client 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true  
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'          
        '400':
          description: Bad request

    delete:
      tags:
        - client
      summary: Deletes a Client
      description: delete a Client
      operationId: deleteClient
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: clientId
          in: path
          description: Client id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid Client value
     
  
components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        email:
          type: string
          example: john.doe@sfeir.com
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        number: 
          type: string
          example: 10A
        street:
          type: string
          example: rue de la gare
        city:
          type: string
          example: Luxembourg
        country:
          type: string
          example: Luxembourg
        zipCode:
          type: string
          example: 'L-5748'
      xml:
        name: address
   
  requestBodies:
    Client:
      description: Client object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Client'
      
